name: GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download lessons content
        run: |
          echo "Downloading lessons from ByByteLessons repository..."
          mkdir -p temp-lessons
          curl -L -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/ByByte-diy/ByByteLessons/zipball/main" \
            -o lessons.zip
          unzip lessons.zip -d temp-lessons
          REPO_DIR=$(find temp-lessons -maxdepth 1 -type d -name "ByByte-diy-ByByteLessons-*" | head -1)
          if [ -d "$REPO_DIR/content" ]; then
            cp -r "$REPO_DIR/content"/* src/assets/content/
            echo "Content downloaded successfully"
          else
            echo "Content directory not found, using placeholder"
            mkdir -p src/assets/content
            echo '{"lessons":[],"platforms":[],"levels":[],"tags":[],"languages":[]}' > src/assets/content/index.json
          fi

      - name: Generate lessons index
        run: |
          if [ -f "scripts/generate-index.js" ]; then
            node scripts/generate-index.js
          else
            echo "Index generation script not found, using existing index"
          fi

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/ByByteSite/browser

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
